user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name jazyl.tech *.jazyl.tech;
        return 301 https://$host$request_uri;
    }

    # Main domain and subdomains
    server {
        listen 443 ssl http2;
        server_name jazyl.tech *.jazyl.tech;

        ssl_certificate /etc/nginx/ssl/jazyl.tech.crt;
        ssl_certificate_key /etc/nginx/ssl/jazyl.tech.key;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:;" always;

        location / {
            proxy_pass http://frontend:3000;
            include /etc/nginx/conf.d/proxy.conf;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }

    }

    # API subdomain
    server {
        listen 443 ssl http2;
        server_name api.jazyl.tech;

        ssl_certificate /etc/nginx/ssl/jazyl.tech.crt;
        ssl_certificate_key /etc/nginx/ssl/jazyl.tech.key;

        # Rate limiting for API
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://backend:8000;
            include /etc/nginx/conf.d/proxy.conf;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;

        }

        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend:8000;
            include /etc/nginx/conf.d/proxy.conf;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;

        }

        location /docs {
            proxy_pass http://backend:8000/docs;
            include /etc/nginx/conf.d/proxy.conf;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;

        }

        location /ws {
            proxy_pass http://backend:8000/ws;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            include /etc/nginx/conf.d/proxy.conf;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;

        }

    }
}