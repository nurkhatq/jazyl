version: '3.8'

services:
  nginx:
    build: ./nginx
    container_name: jazyl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    networks:
      - jazyl-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: jazyl-frontend
    environment:
      - NEXT_PUBLIC_API_URL=https://api.jazyl.tech
      - NEXT_PUBLIC_DOMAIN=jazyl.tech
    volumes:
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - jazyl-network
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: jazyl-backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    networks:
      - jazyl-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: jazyl-postgres
    environment:
      POSTGRES_DB: jazyl_db
      POSTGRES_USER: jazyl_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jazyl-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: jazyl-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - jazyl-network
    restart: unless-stopped

  celery:
    build: ./backend
    container_name: jazyl-celery
    command: celery -A app.celery_app worker --pool=solo --loglevel=info
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - jazyl-network
    restart: unless-stopped

  celery-beat:
    build: ./backend
    container_name: jazyl-celery-beat
    command: celery -A app.celery_app beat --loglevel=info
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    networks:
      - jazyl-network
    restart: unless-stopped


networks:
  jazyl-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
